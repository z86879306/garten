<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd ">
    <!-- 静态资源文件的处理-->
    <mvc:default-servlet-handler/>
	<!-- 静态资源文件的处理 二
	<mvc:resources mapping="/css/**" location="/css/" />-->

	<!-- 扫描package方便注解依赖注入-->
	<context:component-scan base-package="com.shsxt" />
	<mvc:annotation-driven />
	<!-- 定时任务的注解驱动 -->
	<task:annotation-driven/>
    <!--拦截器配置-->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/> 
    		<mvc:exclude-mapping path="/css/*"/> 
    		<mvc:exclude-mapping path="/highcharts4/*"/>
    		<mvc:exclude-mapping path="/images/*"/>
    		<mvc:exclude-mapping path="/jquery-easyui-1.3.3/*"/>
    		<mvc:exclude-mapping path="/js/*"/>
    		<mvc:exclude-mapping path="/index"/>
    		<mvc:exclude-mapping path="/user/login"/>
    		<bean class="com.shsxt.interceptor.LoginInterceptor" />
    	</mvc:interceptor>
       	
    </mvc:interceptors>

	<!-- 视图配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<bean id="htmlviewResolver"
	class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="prefix" value="" />
		 <property name="order" value="1"></property> 
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	<bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="order" value="8" />
        <property name="suffix" value=".jsp" />
        		<property name="contentType" value="text/html;charset=UTF-8"/>
        
       </bean>
	
	<mvc:annotation-driven>
	     <mvc:message-converters>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	   </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 异常配置 -->
    <bean id="exceptionResolver" class="com.shsxt.exception.CustomExceptionResolver">
    	
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 
	    <property name="defaultErrorView" value="error"></property>  -->  
	    <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception 
	    <property name="exceptionAttribute" value="ex"></property>  -->  
	    <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 
	    <property name="exceptionMappings">  
	        <props>  
	            <prop key="com.shsxt.exception.ParamException">error-parameter</prop>  
	            	 这里还可以继续扩展对不同异常类型的处理 
	        </props>  
	    </property> --> 
    </bean>
	
	
</beans>
