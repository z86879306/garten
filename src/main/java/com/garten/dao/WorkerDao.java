package com.garten.dao;


import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.ibatis.annotations.Param;

import com.garten.model.activity.ActivityLog;
import com.garten.model.baby.BabyLeaveLog;
import com.garten.model.baby.BabyPerformanceLog;
import com.garten.model.garten.GartenInfo;
import com.garten.model.garten.GartenLesson;
import com.garten.model.garten.GartenPhotos;
import com.garten.model.garten.GartenRecipe;
import com.garten.model.garten.PhotoDianZan;
import com.garten.model.garten.Video;
import com.garten.model.other.CheckNumber;
import com.garten.model.other.Comment;
import com.garten.model.other.HXLog;
import com.garten.model.other.InfoLog;
import com.garten.model.other.Version;
import com.garten.model.parent.DaijieInfo;
import com.garten.model.parent.ParentInfo;
import com.garten.model.worker.WorkerCheckLog;
import com.garten.model.worker.WorkerInfo;
import com.garten.model.worker.WorkerLeaveLog;
import com.garten.vo.baby.BabyLeaveLogAll;
import com.garten.vo.baby.UnusualAll;
import com.garten.vo.parent.ParentInfoShort;
import com.garten.vo.teacher.ActivityDetailAll;
import com.garten.vo.teacher.BabyCheckLogAll;
import com.garten.vo.teacher.BabyPerformanceLogAll;
import com.garten.vo.teacher.ClassManage;
import com.garten.vo.teacher.Daijie;
import com.garten.vo.teacher.FlowerAll;
import com.garten.vo.teacher.GartenStartEnd;
import com.garten.vo.teacher.Shouye;
import com.garten.vo.teacher.WorkerCheckLogAll;
import com.garten.vo.teacher.WorkerInfoShort;
import com.garten.vo.teacher.WorkerLeaveLogPrin;

public interface WorkerDao {
	public WorkerInfo findWorkerByPwd(Map<String, Object> param);
	public void updateToken(Map<String, Object> param);
	public void updatePwdToken(Map<String, Object> param);
	public Shouye findWorkerByToken(String token);
	public Integer findInfoCount(String token);
	public List<InfoLog> findNotifiedByToken(Map<String, Object> map);
	public Integer findImportantCountByToken(String token);
	public List<BabyCheckLogAll> findBabyCheckByClassId(Map<String, Object> param);
	public Set<Long> findYichangLongByClassId(Integer classId);
	public List<ClassManage> findBabysByClassId(Integer classId);
	public  List<GartenLesson> findLessonByClassId(Map<String, Object> param);
	public int findUpdateBabyByToken(Map<String, Object> param);
	public List<BabyPerformanceLogAll> findPerformanceByClassId(Integer classId);
	public WorkerCheckLog findWorkerCheckLogByToken(Map<String, Object> map);
	public void inset(Map<String, Object> param);
	public List<GartenRecipe> findRecipeByToken(Map<String, Object> putMapParams);
	public List<BabyLeaveLogAll> findLeaveLogByClassId(Map<String, Object> putMapParams);
	public WorkerInfo findWorkerInfoByToken(String token);
	public void createRecipeByToken(Map<String, Object> param);
	public void createWorkerCheckLogByToken(Map<String, Object> param);
	public WorkerCheckLog findWorkerCheckLogOne(String token);
	public void createFeadbackByToken(Map<String, Object> param);
	public Version findVersion();
	/*public GartenStartEnd findGartenArriveLeaveById(String token);*/
	public void insetBabyCheck(Map<String, Object> param);
	public void insetWorkerCheck(Map<String, Object> param);
	public void insetBabyPerformance(Map<String, Object> param);
	public Set<Long> findLessonCircleByClassId(Integer classId);
	public Set<Long> findRecipeCircleCircleByToken(String token);
	public Set<Long> findDaijieCircleCircleByClassId(Integer classId);
	public Set<Long> findAttendanceCircleByToken(String token);
	public List<Daijie> findDaijieByClassId(Integer classId);
	
	public void updateAgreeLeaveByCheckId(Integer leaveId);
	public void updateLate(Map<String, Object> putMapParams);
	public void updatePerformance(Map<String, Object> putMapParams);
	public List<BabyLeaveLog> findLeaveLongByClassId(Integer classId);
	public List<WorkerLeaveLog> findWLeaveLongByToken(Map<String, Object> param);
	public GartenInfo findGartenInfoById(Integer gartenId);
	public List<ParentInfoShort> findParentLinkMan(Integer classId);
	public List<WorkerInfoShort> findTeacherLinkMan(String token);
	public WorkerInfoShort findTeacherByToken(String token);
	public List<GartenPhotos> findParentPhotoByToken(Map<String, Object> putMapParams);
	public List<GartenPhotos> findWorkerPhotoByToken(Map<String, Object> putMapParams);
	public List<Comment> findEvaluationByInfoId(Integer infoId);
	public List<PhotoDianZan> findDianZanByInfoId(Integer infoId);
	public PhotoDianZan findHasdianzan(Map<String, Object> map);
	public void createDianzan(Map<String, Object> param);
	public void deleteDianzan(Map<String, Object> param);
	public void createPhoto(Map<String, Object> putMapParams);
	public void updatePhoto(Map<String, Object> putMapParams);

	public void createCommentPhoto(Map<String, Object> param);
	public void insertDuanxin(Map<String, Object> param);
	public void deleteDuanxin();
	public WorkerInfo findWorkerByAccount(String account);
	public CheckNumber findCheck(Map<String, Object> param);
	public void findAgreeDaijieByDaijieId(Map<String, Object> putMapParams);
	public void updateTeacherMessage(Map<String, Object> putMapParams);
	public void updateTeacherHead(Map<String, Object> putMapParams);

	public List<WorkerInfo> findWorkerInfoByClass(Map<String, Object> param);
	public List<FlowerAll> findFlowerByToken(String token);
	public Integer findFlowerCountByToken(String token);
	public List<WorkerLeaveLogPrin> findTimeWorkerLeaveByToken(Map<String, Object> putMapParams);
	public void insertWorkerLeaveLog(Map<String, Object> putMapParams);
	public void deleteBabyLeaveByleaveId(Integer leaveId);
	public Integer isApplyActivity(Map<String, Object> putMapParams);
	public void insertHX(HXLog hxLog);
	public Set<Long> findWCheckLongByToken(String token);
	public WorkerInfo findWorkerInfoById(Integer workerId);
	public GartenPhotos findPhotoByToken(String token);
	public void updateCheckAgreeByCheckIdWorker(Map<String, Object> putMapParams);
	public void updateLateWorker(Map<String, Object> putMapParams);
	public ClassManage findBabyById(Integer babyId);
	public List<UnusualAll> findUnusualAllByClassId(Map<String, Object> param);
	public void resolveUnusual(@Param("unusualId")Integer unusualId,@Param("state")Integer state);
	public List<Video> findVideosByToken(Map<String, Object> map);
	public void readNotified(String infoId);
	public void deleteComment(String commentId);
	public void deletePhotoComment(String infoId);
	public void deletePhotoDianzan(String infoId);
	public void deletePhoto(String infoId);
	public GartenPhotos findPhotoOne(String infoId);
	public WorkerInfo findWorkerInfoByTokenAll(String token);
	public String findToken(Map<String, Object> param);
	public List<WorkerInfo> findWorkerByGartenId(Integer gartenId);
	public List<WorkerInfo> findWorkerInfoNotified(Map<String, Object> param);
	public List<Long> findAttendanceCircleByTokenList(String token);
	public List<UnusualAll> findUnusualAllByTokenSmall(Map<String, Object> param);
	public List<BabyLeaveLogAll> findLeaveLogByTokenSmall(Map<String, Object> putMapParams);
	public void deleteActivityLog(Integer activityId);
	public void deleteActivityDetail(Integer activityId);
	public ActivityDetailAll findActivityDetailById(Integer activityId);
	public List<ActivityDetailAll> findIntroduceActivityByToken(Integer gartenId);
	public void insertActivity(Map<String, Object> param);
	public void updateIntroduce(Map<String, Object> param);
	public void updateWorkerPhoneNumber(Map<String, Object> params);
	public List<WorkerInfo> findWorkerByClassId(@Param("gartenId")Integer gartenId, @Param("classId")Integer classId);
	public DaijieInfo findDaijieById(Integer daijieId);
	
}
