<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garten.dao.ParentDao">
	<select id="findParentByPwd"  resultType="ParentInfo">
		SELECT * FROM parent_info  p
		where phoneNumber=#{phoneNumber} 
		and pwd=#{pwd}
		and p.isValid=0
	</select>
	
	
	<select id="findParentById"  resultType="ParentInfo">
		SELECT * FROM parent_info  p
		where parentId=#{parentId} 
		and p.isValid=0
	</select>
	
	<select id="findParentByGartenId"  resultType="ParentInfo">
		SELECT * FROM parent_info  p
		where 
		FIND_IN_SET(#{gartenId}, p.gartenId)
		and p.isValid=0
	</select>
	
	
	<!--大改 这个班级所有老师的名字  -->
	<select id="findClassName"  resultType="String">
		SELECT workerName  FROM worker＿info  w
		where 
		find_in_set(#{classId},w.classId)
		and w.job='老师'
		and w.isValid=0
	</select>
	
	<select id="findDaijieCircleCircleByToken"  resultType="Long">
		SELECT DISTINCT UNIX_TIMESTAMP(d.time)
		FROM daijie_info d ,  baby_info b 
		WHERE
		b.babyId=#{babyId}
		and d.babyId = b.babyId
		AND b.isValid = 0 AND d.isValid = 0 
	</select>
	
	
	
	
	<!-- <select id="findClasses"  resultType="GartenClass">
		SELECT   c.leadClass, c.leadGrade,c.gartenId,c.classId,c.registTime
		FROM
		worker＿info w,garten_class c
		WHERE w.gartenId=c.gartenId
		and w.token=#{token}
		AND w.isValid = 0 AND c.isValid = 0
	</select> -->
	
	<select id="findClassesName"  resultType="GartenClassName">
		SELECT   c.leadClass, c.leadGrade,c.gartenId,c.classId,c.registTime
		FROM
		worker＿info w,garten_class c
		WHERE w.gartenId=c.gartenId
		and w.token=#{token}
		<if test="	leadGrade!=null and leadGrade!=''" >
				and c.leadGrade=#{leadGrade}
			</if>
		AND w.isValid = 0 
	</select>
	
	
	<select id="findOrder"  resultType="Order">
		SELECT   *
		FROM
		torder 
		WHERE orderNumber=#{orderNumber}
		AND isValid = 0
	</select>
	
	<select id="findRecipeCircleCircleByToken"  resultType="Long">
		SELECT UNIX_TIMESTAMP(r.time) FROM
		garten_recipe r
		JOIN baby_info b ON r.gartenId=b.gartenId
		WHERE b.babyId = #{babyId}
		AND r.isValid = 0 AND b.isValid = 0
	</select>
	
	
	<select id="findParentLinkMan"  resultType="ParentInfoShort">
				SELECT * FROM
			parent_info p,  baby_info b
		WHERE
			b.classId=#{classId}
		AND FIND_IN_SET(b.babyId, p.babyId)
		AND p.parentId not in (#{parentId})
		GROUP BY p.parentId desc
	</select>
	
	<select id="findPhotoByParentId"  resultType="GartenPhotos">
		select * from garten_photos p 
		where 
		p.id=#{parentId}
		and p.job='家长'
		and p.isValid=0 
		order by p.infoId desc
		limit 1
	</select>
	
	<select id="findTeacherLinkMan"  resultType="WorkerInfoShort">
		select * from worker＿info w where
		w.gartenId=#{gartenId}
		and w.isValid=0
		and (FIND_IN_SET(#{classId},w.classId) or w.job='园长')
		
	</select>

	
	<select id="findPhoneNameByInfoId"  resultType="String">
		select c.commentName name from garten_photos p,comment c 
		where p.infoId=#{infoId}
		and p.infoId=c.infoId
		and p.isValid=0  and c.isValid=0
	</select>
	
	
	<select id="findLessonCircleByBabyId"  resultType="Long">
		SELECT UNIX_TIMESTAMP(l.time) FROM
		garten_lesson l 
		join  baby_info b on l.classId=b.classId
		WHERE b.babyId=#{babyId}
		and l.isValid=0 and b.isValid=0 
	</select>
	
	<update id="updateToken"  >
		update   parent_info 
		set token=#{token},tokenTime=now()
		where phoneNumber=#{phoneNumber} 
	</update>
	
	<update id="updatePwdToken"  >
		update   parent_info 
		set token=#{token},tokenTime=now(),pwd=#{pwd}
		where phoneNumber=#{phoneNumber} 
	</update>
	
	<select id="findWorkerByPhoNumber"  resultType="ParentInfo">
		select * from parent_info p 
		where phoneNumber=#{phoneNumber}
		and p.isValid=0
	</select>
	
	<select id="findVideos"  resultType="Video">
		SELECT * FROM
			garten_video v, baby_info b
		WHERE
			b.gartenId = v.gartenId
		AND b.babyId = #{babyId}
		AND NOT EXISTS (
			SELECT * FROM garten_video, worker＿info
WHERE v.type = 0 AND (v.pointId!=#{classId}  or #{classId} is null)	)	
		AND v.type NOT IN (3)
	</select>
	
	
	<select id="findParentInfoByToken"  resultType="ParentInfo">
		SELECT * FROM  parent_info p
		WHERE
		token = #{token}
		AND UNIX_TIMESTAMP(now()) - UNIX_TIMESTAMP(tokenTime)  &lt;    864000 
		and p.isValid=0
	</select>
	
	<select id="findParentShortByToken"  resultType="ParentInfoShort">
		SELECT * FROM  parent_info p
		WHERE
		token = #{token}
		AND UNIX_TIMESTAMP(now()) - UNIX_TIMESTAMP(tokenTime)  &lt;    864000 
		and p.isValid=0
	</select>
	
	<select id="findBabyById"  resultType="ClassManage">
		SELECT  * FROM
		baby_info b
		left join garten_class c on  c.classId=b.classId 
		WHERE
		b.babyId = #{babyId}
		and b.isValid=0 
		group by b.babyId
	</select>
	
	<select id="findBabyShortByToken"  resultType="BabyInfoShort">
				SELECT concat(c.leadGrade, c.leadClass) classStr,
			b.babyId,b.babyName,g.gartenName,b.babyHead
		FROM
			baby_info b
			join parent_info p on FIND_IN_SET(b.babyId, p.babyId)
			join garten_info g on  g.gartenId = b.gartenId
			join garten_class c on b.classId=c.classId
		WHERE
			p.token = #{token}
		AND b.isValid = 0 AND p.isValid = 0 
		GROUP BY b.babyId desc
	</select>
	
	
	<select id="findBabyShortByBabyId"  resultType="BabyInfo">
		SELECT *
		FROM baby_info b
		WHERE b.babyId = #{babyId}
		AND b.isValid = 0 
	</select>
	
	<select id="findAttendanceCircleByToken"  resultType="Long">
		SELECT UNIX_TIMESTAMP(r.time)
		FROM  ignore_time r
			join baby_info b on r.gartenId=b.gartenId
		WHERE
		b.babyId = #{babyId}
    	and r.isValid=0 and b.isValid=0 
	</select>
	
	<select id="findYichangLongById"  resultType="Long">
				SELECT unix_timestamp(u.time) FROM
				baby_info b, unusual u
			WHERE
				b.babyId=#{babyId}
			and b.babyId=u.jobId and u.job='宝宝'
			AND b.isValid = 0 AND u.isValid = 0
	</select>
	
	
	<!-- <select id="findBabyCheckAllByToken"  resultType="BabyCheckLogAll">
		SELECT *		FROM
		baby_info b LEFT JOIN baby_check_log c on b.babyId=c.babyId
		WHERE
		b.babyId=#{babyId}
		and  c.arriveTime is not null
		and c.leaveTime is not null
		 and c.isValid=0 and b.isValid=0
	</select> -->
	
	<select id="findGartenArriveLeaveById"  resultType="GartenStartEnd">
		select g.arriveTime start,g.leaveTime  end from garten_info g 
		join baby_info b on b.gartenId=g.gartenId
		where b.babyId=#{babyId} and g.isValid=0 and b.isValid=0
	</select>
	
	<select id="findHasdianzan"  resultType="PhotoDianZan">
		select * from photo_dianzan d
		join parent_info p on p.parentId=d.jobId
		where p.token=#{token}
		and '家长'=d.job
		and d.infoId=#{infoId}
	</select>
	
	
	<select id="findParentPhotoByToken"  resultType="GartenPhotos">
		SELECT * FROM
			garten_photos gp
			join parent_info p on gp.job = '家长' and gp.id=p.parentId
			join baby_info b on  FIND_IN_SET(b.babyId, p.babyId)
			WHERE
			 b.classId=#{classId}
			and gp.gartenId=#{gartenId}
			and gp.isValid=0 and  b.isValid=0 and p.isValid=0
			group by gp.infoId 
	</select>
	
	
	<select id="findWorkerPhotoByToken"  resultType="GartenPhotos">
	select * from garten_photos p
		join worker＿info w on w.gartenId=p.gartenId 
		join baby_info b on  FIND_IN_SET(b.classId,w.classId)
		where p.job in('老师','园长','职工') 
		and b.classId=#{classId}
		and p.gartenId=#{gartenId}
		and p.isValid=0 and w.isValid=0 
		GROUP BY p.infoId 
	</select>
	
	
	
	
	<select id="findLeaveLongByToken"  resultType="BabyLeaveLog">
		SELECT *		FROM
		baby_info b  JOIN baby_leave_log c on b.babyId=c.babyId
		WHERE
		b.babyId= #{babyId}
		and b.isValid=0 and c.isValid=0 
	</select>
	
	<select id="findDaijieById"  resultType="Daijie">
			SELECT *
			FROM  daijie_info d  
			join baby_info b on d.babyId=b.babyId
			join garten_class c on c.classId=b.classId
			WHERE
			 b.babyId = #{babyId}
    		and d.isValid=0 	 and b.isValid=0
    		group by d.daijieId desc
    		
	</select>
	
	<select id="findVersion"  resultType="Version">
		select * from version v 
		where type=1
		 and v.isValid=0 
		 order by v.time desc
		  limit 1
	</select>
	
	
	<select id="findLessonById"  resultType="GartenLesson">
			SELECT *   FROM
				baby_info b,garten_lesson l
			WHERE b.babyId = #{babyId}
			and b.classId=l.classId
			
			AND #{time} &lt;= unix_timestamp(l.time)
			AND unix_timestamp(l.time) &lt; #{time}+86400
			AND l.isValid = 0 AND b.isValid = 0 
			group by l.lessonId
	</select>
	
	<select id="findRecipeById"  resultType="GartenRecipe">
			SELECT *   FROM
				baby_info b,garten_recipe r
			WHERE b.babyId = #{babyId}
			and b.gartenId=r.gartenId
			AND #{time} &lt;= unix_timestamp(r.time)
			AND unix_timestamp(r.time) &lt; #{time}+86400
			AND r.isValid = 0 AND b.isValid = 0 
	</select>
	
	
	<select id="findPerformanceById"  resultType="BabyPerformanceLogAll">
			SELECT *   FROM
				baby_info b,baby_performance_log r
			WHERE b.babyId = #{babyId}
			and b.babyId=r.babyId
			AND #{time} &lt;= unix_timestamp(r.time)
			AND unix_timestamp(r.time) &lt; #{time}+86400
			AND r.isValid = 0 AND b.isValid = 0 
	</select>
	
	<select id="findGartenInfoById"  resultType="GartenInfo">
			SELECT *   FROM
				baby_info b
				join garten_info g on  b.gartenId=g.gartenId
			WHERE b.babyId = #{babyId}
		    and b.isValid = 0  and g.isValid=0
	</select>
	
	<select id="findActivityById"  resultType="ActivityDetail">
			SELECT *   FROM
				activity_detail
			WHERE activityId=#{activityId}
	</select>
	
	
	
	
    
		
	
	<select id="findBabyCheckByToken"  resultType="BabyCheckLogAll">
		SELECT *		FROM
		baby_info b LEFT JOIN baby_check_log c on b.babyId=c.babyId
		WHERE
		b.babyId = #{babyId}
		and UNIX_TIMESTAMP(c.time)=#{time}
		and b.isValid=0 and c.isValid=0 
	</select>
	
	<select id="findYichangByToken"  resultType="UnusualAll">
	SELECT  u.unusualTime, u.unusualType,u.unusualImg ,u.jobId, u.gartenId, 
	u.state,u.fileId, u.cardNo, u.unusualId,u.time,u.job,
	b.babyName jobName,b.babyHead jobHead
			FROM baby_info b, unusual u
			WHERE
				b.babyId=#{babyId}
			and b.babyId=u.jobId
			and u.job='宝宝'
			and UNIX_TIMESTAMP(u.time)=#{time}
			AND b.isValid = 0 AND u.isValid = 0
	</select>
	
	
	
	<select id="findNotifiedByToken"  resultType="InfoLog">
		select *  from parent_info p LEFT JOIN info_log i on i.id=p.parentId
		 where 
		 token=#{token} 
		 and job='家长'
		 and i.type=#{type}
		 and p.isValid=0 and i.isValid=0
	</select>
	
	
	
	
	<select id="findImportantCountByToken"  resultType="Integer">
		select count(1) count  from parent_info p LEFT JOIN info_log i on i.id=p.parentId 
		 where 
		 p.token=#{token} 
		 and UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(p.tokenTime)  &lt;    864000 
		 and i.job='家长'
		 and i.type=2
		 and i.state=0
		 and p.isValid=0 and i.isValid=0 
	</select>
	
	<select id="findInfoCount"  resultType="Integer">
		select count(1) count from parent_info p LEFT JOIN
		 info_log i on i.id=p.parentId 
		 where i.job='家长' and
		 p.token=#{token} and
		 i.state=0
		 and p.isValid=0 and i.isValid=0 
	</select>
	
	<select id="getParentAttendance"  resultType="Boolean">
		select unix_timestamp(now()) &lt; unix_timestamp(p.attendanceTime) count from parent_info p 
		 where 
		 p.token=#{token}
		 and p.isValid=0 
	</select>
	
	
	<update id="addRemarkCheck"  >
	UPDATE baby_check_log c
	set remark=#{remark}
	where checkId=#{checkId}
	</update>
	
	<update id="updateBaby"  >
	UPDATE baby_info b
	set height=#{height}, weight=#{weight}, allergy=#{allergy}, health=#{health}, hobby=#{hobby}, specialty=#{specialty}
	where babyId=#{babyId}
	</update>
	
	
	<update id="updateBabyHead"  >
	UPDATE baby_info b
	set babyHead=#{imgAddress}
	where babyId=#{babyId}
	</update>
	
	
	
	
	<delete id="deleteDaijieById"  >
	delete from daijie_info 
	where daijieId=#{daijieId}
	</delete>
	
	<insert id="createDaijieById"  >
	insert into  daijie_info 
	set parentId=#{parentId},phoneNumber=#{phoneNumber},daijieName=#{daijieName},relation=#{relation},daijieHead=#{daijieHead},daijiePhoneNumber=#{realPhoneNumber},arrivedTime=FROM_UNIXTIME(#{arrivedTime},  '%Y-%m-%d %H:%i:%s')
,babyId=#{babyId}
	
	</insert>
	
	<insert id="insertActivity"  >
	insert into  activity_log 
	set babyId=#{babyId},parentName=#{parent},phoneNumber=#{phoneNumber},activityId=#{activityId}
	</insert>
	
	 <insert id="toFlower" >
        insert into worker_flower  set    parentId=#{parentId},workerId=#{workerId}
    </insert>
    
    <update id="updateFlower" >
        update  parent_info  set    flower='0' where parentId=#{parentId}
    </update>
    
    
	
	  <update id="upFlower" >
        update  worker＿info  set    flowers=flowers+1 where workerId=#{workerId}
    </update>
    
    
    <update id="updateCheckAgreeByCheckId"  >
	UPDATE worker_leave_log l
	set checkId=checkId
	<if test="	0==type " >
			,	 b.stateLate=2 </if>
			<if test="	1==type " >
			,	 b.stateEarly=2 </if>
	where checkId=#{checkId}
	</update>
	
	 <insert id="insertBabyLeave" >
        insert into baby_leave_log  set    
       babyId=#{babyId},leaveTime=FROM_UNIXTIME(#{leaveTime},  '%Y-%m-%d %H:%i:%s'),reason=#{reason},endTime=FROM_UNIXTIME(#{endTime},  '%Y-%m-%d %H:%i:%s')
    </insert>
    
    <insert id="createFeadbackByToken" >
        insert into feedback(gartenId,job,jobId,content,name,phoneNumber
) values(
          #{gartenId},#{job},#{jobId},#{content},#{name},#{phoneNumber}
        )
    </insert>
    
     
     <insert id="createPhoto" >
        insert into garten_photos(
        gartenId,job,id,content,state,title,parentName,parentRelation,babyId,imgs
) values(
          #{gartenId},#{job},#{id},#{content},#{state},#{title},#{parentName},#{parentRelation},#{babyId},#{imgs}
        )
    </insert>
    
   <!--  <update id="updatePhoto" >
        update  garten_photos set imgs=#{imgs} where infoId=#{infoId}
    </update> -->
	
	 <insert id="createDianzan" >
        insert into photo_dianzan(infoId,dianzanName,job,jobId
) values(
          #{infoId},#{name},#{job},#{jobId}
        )
    </insert>
    
    
    <insert id="insertFeedback" >
        insert into feedback 
        set gartenId=#{gartenId},
		job=#{job},
		jobId=#{jobId},
		content=#{content},
		name=#{name},
		phoneNumber=#{phoneNumber}
        
    </insert>
    
     <insert id="insertOrdr" >
        insert into torder 
        set orderNumber=#{orderNumber},
		job=#{job},
		orderMoney=#{orderMoney},
		orderDetail=#{orderDetail},
		id=#{id},
		type=#{type},
		payType=#{payType},
		monthCount=#{monthCount},
		relateId=#{relateId},
        gartenId=#{gartenId},
        state=#{state},
        employeeNo=#{employeeNo},
        employeeName=#{employeeName}
    </insert>
    
    
     <update id="updateChargeTime" >
        update  parent_info 
        set monitorTime=#{monitorTime},
		attendanceTime=#{attendanceTime}
        where parentId=#{parentId}
    </update>
    
    
    
    
    
    <update id="zforder"  >
		update  torder  o
		set state=1
		where o.isvalid=0 and orderNumber=#{orderNumber}
	</update>
	
    
    <insert id="createCommentPhoto" >
        insert into comment(
       infoId,commentName,commentContent,replyCommentId,replyName,job,jobId
) values(
          #{infoId},#{commentName},#{commentContent},#{replyCommentId},#{replyName},#{job},#{jobId}
        )
    </insert>
    
    
    <delete id="deleteDianzan" >
        delete from photo_dianzan where infoId=#{infoId} and jobId=#{jobId} and job=#{job}
    </delete>
    <!-- 生日定时任务  明天生日的孩子提醒 -->
	<select id="findBaby"  resultType="BabyInfo">
		SELECT * FROM
		baby_info b WHERE
	  MONTH(birthday)=MONTH(now()) 
		and Day(birthday)=Day(now()) +1  AND b.isValid = 0
	</select>


<select id="getWorker"  resultType="WorkerInfo">
		SELECT * FROM
		worker＿info  WHERE  
		FIND_IN_SET(#{classId},classId)
		 and isvalid=0
	</select>
	
	<update id="updateHonghua"  >
	UPDATE parent_info p
	set flower=1
	</update>
	
	<select id="getminorParent"  resultType="ParentInfo">
	SELECT * FROM parent_info  p
		where 
		FIND_IN_SET(#{babyId}, p.babyId)
		and p.isValid=0
	</select>
	<select id="findVisitCount" resultType="VisitCount">
		select * from visit_count
		where gartenId=#{gartenId}
		and type=#{type} 
		and gmt_create=FROM_UNIXTIME(#{time},  '%Y-%m-%d %H:%i:%s')
	</select>
	<insert id="addVisitCount">
		insert into visit_count(gmt_create,gmt_modified,count,type,gartenId)
		values(FROM_UNIXTIME(#{time},  '%Y-%m-%d %H:%i:%s'),now(),1,#{type},#{gartenId})
	</insert>
	<update id="updateVisitCount">
		update visit_count
		set
		gmt_modified=now(),count=count+1
		where type=#{type}
		and gartenId=#{gartenId}
		and gmt_create=FROM_UNIXTIME(#{time},  '%Y-%m-%d %H:%i:%s')
	</update>
</mapper> 